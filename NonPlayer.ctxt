#BlueJ class context
comment0.target=NonPlayer
comment0.text=\r\n<h2>The\ NonPlayer\ class\ </h2>\r\n<p>This\ class\ is\ a\ subclass\ of\ {@link\ GameObject},\ it\ mainly\ controls\ the\ movement\ of\ non\ players\ inside\ the\ maze</p>\r\n\ @author\ Bouchra\ Mohamed\ Lemine\r\n\ @since\ 06-04-2021\r\n
comment1.params=x\ y\ size\ npColour
comment1.target=NonPlayer(int,\ int,\ int,\ javafx.scene.paint.Color)
comment1.text=<p>\ The\ constructor\ method\ to\ create\ a\ new\ Nonplayer\ object\ </p>\r\n\ \ \ \ \ \r\n\ \ \ \ \ \ @param\ x\ the\ integer\ which\ represents\ the\ topX\r\n\ \ \ \ \ \ @param\ Y\ the\ integer\ which\ represents\ the\ topY\r\n\ \ \ \ \ \ @param\ size\ the\ integer\ which\ represents\ the\ size\r\n@param\ npColpour\ the\ colour\ of\ the\ object
comment10.params=units
comment10.target=void\ moveX(int)
comment10.text=<p>\ Overrides\ {@link\ GameObject\#moveX}\ to\ only\ allow\ a\ non\ player\ to\ move\ between\ its\ @return\ {@code\ minX}\ and\ @return\ {@code\ maxX}</p>\r\n@param\ units\ the\ integer\ to\ be\ added\ to\ topX
comment11.params=units
comment11.target=void\ moveY(int)
comment11.text=<p>Overrides\ {@link\ GameObject\#moveX}\ to\ only\ allow\ a\ non\ player\ to\ move\ between\ its\ @return\ {@code\ minY}\ and\ @return\ {@code\ maxY}\ </p>\r\n@param\ units\ the\ integer\ to\ be\ added\ to\ topY
comment12.params=player\ score
comment12.target=void\ changeDirectionX(Player,\ int)
comment12.text=\ <p>\ The\ direction\ of\ a\ non\ player\ moving\ on\ x\ axis\ depends\ on\ the\ position\ of\ the\ player\ and\ the\ score\ </p>\r\n\ \ \ \ \ \ @param\ player\ a\ Player\ object\r\n@param\ score\ an\ integer\ representing\ the\ score\ of\ the\ game
comment13.params=player\ nonPlayers\ key
comment13.target=void\ changeDirectionY(Player,\ java.util.ArrayList,\ GameObject)
comment13.text=<p>\ The\ direction\ of\ a\ non\ player\ moving\ on\ Y\ axis\ depends\ on\ other\ non\ players,\ the\ player,\ and\ the\ key\ </p>\r\n\ \ \ \ \ \ @param\ player\ a\ Player\ object\r\n\ @param\ nonPayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n@param\ key\ a\ GameObject\ object
comment14.params=player\ nonPlayers\ key
comment14.target=void\ changeArea(Player,\ java.util.ArrayList,\ GameObject)
comment14.text=<p>\ Change\ the\ area\ of\ a\ non\ player\ on\ x\ axis\ </p>\r\n\ \ \ @param\ player\ a\ Player\ object\r\n\ @param\ nonPayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n@param\ key\ a\ GameObject\ object
comment15.params=nonPlayers
comment15.target=boolean\ behindAnonPlayer(java.util.ArrayList)
comment15.text=\ <p>\ This\ method\ receives\ an\ arraylist\ of\ non\ players\ to\ check\ whether\ the\ NonPlayer\ object\ is\ behind\ any\ of\ them\ </p>\ \r\n\ @param\ nonPayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n@return\ returns\ <b>true</b>\ when\ the\ object\ is\ behind\ a\ non\ player,\ otherwise,\ it\ returns\ <b>false</b>
comment16.params=nonPlayers
comment16.target=boolean\ inFrontOfAnonPlayer(java.util.ArrayList)
comment16.text=\ <p>\ This\ method\ receives\ an\ arraylist\ of\ non\ players\ to\ check\ whether\ the\ NonPlayer\ object\ is\ in\ front\ of\ any\ of\ them\ </p>\ \r\n\ @param\ nonPayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n@return\ returns\ <b>true</b>\ when\ the\ object\ is\ in\ front\ of\ a\ non\ player,\ otherwise,\ it\ returns\ <b>false</b>
comment17.params=player
comment17.target=boolean\ reachedPlayer(Player)
comment17.text=\ <p>\ This\ method\ will\ return\ true\ when\ the\ Player\ object\ is\ very\ close\ to\ the\ NonPlayer\ object,\r\n\ \ \ and\ either\ above,\ below,\ if\ front\ of,\ or\ behind\ it\ </p>\r\n\ \ \ @param\ player\ a\ Player\ object\r\n@return\ returns\ <b>false</b>\ by\ default,\ but\ it\ returns\ <b>true</b>\ when\ the\ object\ is\ close\ to\ the\ player
comment18.params=player\ nonPlayers\ key
comment18.target=boolean\ canMoveRight(Player,\ java.util.ArrayList,\ GameObject)
comment18.text=<p>\ Check\ whether\ a\ NonPlayer\ object\ can\ move\ forword\ </p>\ \r\n\ @param\ player\ a\ Player\ object\r\n\ @param\ nonPayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n\ @param\ key\ a\ GameObject\ object\r\n@return\ returns\ <b>true</b>\ when\ the\ conditions\ allow\ the\ object\ to\ move\ to\ the\ right,\ otherwise,\ it\ returns\ <b>false</b>
comment19.params=player\ nonPlayers
comment19.target=boolean\ canMoveLeft(Player,\ java.util.ArrayList)
comment19.text=<p>\ Check\ whether\ a\ NonPlayer\ object\ can\ move\ back</p>\ \r\n\ @param\ player\ a\ Player\ object\ \r\n\ @param\ nonPlayers\ an\ ArrayList\ of\ NonPalyer\ objects\r\n@returns\ returns\ <b>true</b>\ when\ the\ conditions\ allow\ the\ object\ to\ move\ to\ the\ right,\ otherwise,\ it\ returns\ <b>false</b>
comment2.params=max
comment2.target=void\ setMaxX(int)
comment2.text=<p>\ Set\ the\ maximum\ value\ of\ the\ {@code\ topX}\ of\ a\ non\ player\ </p>\r\n@param\ max\ the\ integer\ that\ maxX\ will\ be\ set\ to
comment20.params=nonPlayers
comment20.target=boolean\ exist(java.util.ArrayList)
comment20.text=\ <p>\ Since\ the\ game\ involves\ NonPlayer\ objects\ that\ disppear,\ we\ need\ to\ know\ when\ all\ of\ them\ has\ dissapeared\ </p>\r\n\ @param\ nonPlayers\ an\ ArryList\ of\ NonPlayer\ objects\r\n@return\ returns\ <b>false</b>\ by\ default,\ but\ will\ return\ <b>true</b>\ when\ any\ of\ he\ objects\ in\ the\ arraylist\ is\ visible
comment3.params=min
comment3.target=void\ setMinX(int)
comment3.text=<p>\ Set\ the\ minimum\ value\ of\ the\ {@code\ topX}\ of\ a\ non\ player\ </p>\r\n@param\ min\ the\ integer\ that\ minX\ will\ be\ set\ to
comment4.params=max
comment4.target=void\ setMaxY(int)
comment4.text=<p>\ Set\ the\ maximum\ value\ of\ the\ {@code\ topY}\ of\ a\ non\ player\ </p>\r\n@param\ max\ the\ integer\ that\ maxY\ will\ be\ set\ to
comment5.params=min
comment5.target=void\ setMinY(int)
comment5.text=<p>\ Set\ the\ minimum\ value\ of\ the\ {@code\ topY}\ of\ a\ non\ player\ </p>\ \r\n@param\ min\ the\ integer\ that\ minY\ will\ be\ set\ to
comment6.params=
comment6.target=int\ getMaxX()
comment6.text=<p>\ Get\ the\ maxX\ of\ a\ non\ player\ </p>\r\n@return\ {@code\ maxX}
comment7.params=
comment7.target=int\ getMinX()
comment7.text=\ <p>\ Get\ the\ <b>minX</b>\ of\ a\ non\ player\ \r\n@return\ {@code\ minX}
comment8.params=
comment8.target=int\ getMaxY()
comment8.text=<p>\ Get\ the\ maxY\ of\ a\ non\ player\ </p>\ \r\n@return\ {@code\ maxY}
comment9.params=
comment9.target=int\ getMinY()
comment9.text=<p>\ Get\ the\ minY\ of\ a\ non\ player\ </p>\r\n@return\ @return\ {@code\ minY}
numComments=21
